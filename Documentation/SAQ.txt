+ What's this?
This is a file containing Some Answered Questions. It is not a FAQ because I don't get enough questions to build a frequency chart. It is simply a list of Q&A you might be interested in.

+ Why no web pages dedicated to the project?
Three reasons:
a) I prefer concentrating on Cloo.
b) The site at sourceforge works reasonably well.
c) I don't find web coding and maintenance THAT entertaining.

+ Can I join the project as a developer?
Cloo was never intended to be a large and complex framework, covering every imaginable situation. As a result it is comfortably maintanable by a single person. It is true that sometimes (when OpenCL is updated) I'm quite busy. Yet others I just sit around doing nothing but poking into documentation. On average, there isn't enough room for two or more devs. For now...

+ Then how do I make or suggest changes to Cloo?
Drop a post at the sourceforge forums and let's discuss things. If the proposal is general enough and doesn't bend, alter, obfuscate or duplicate existing Cloo/OpenCL functionality, there's good chance it'll make it into the codebase.

+ What's between OpenTK and Cloo?
+ Why do the people at OpenTK recomend Cloo when I ask about OpenCL/OpenTK.Compute?
The very first plan for OpenTK.Compute was straightforward: generate the OpenCL bindings just like the OpenGL ones and be done with it. However, the more we dug into the standard the more it became clear that such approach wouldn't suffice. OpenCL is more hairy, when it comes to managed environments, thus a separate, object oriented project was conceived.
The first versions of Cloo were built on top of OpenTK. But it still wasn't an ideal solution. Due to some (now fixed) bugs in the OpenCL headers/specs and the OpenTK generator the bindings needed manual checking and tweaking. That wasn't an easy task. So we decided to split the projects and fit Cloo with its own set of bindings. Since then the projects have developed separately but with the same philosophy of freedom, portability and ease of use.