[0.6.2] -----------------------------------------------------------------------
Breaking changes:
Renamed ComputeImage.PixelSize to ElementSize.

New functionality:
Track kernel arguments until kernel execution. Added new Set*Arguments() methods for this purpose.
New ComputeProgram constructor with a single source string.

Bugfixes:
ComputeCommandQueue.Wait() calls CL10.WaitForEvents().
ComputeCommandQueue.Read( ComputeImage... ) allocates wrong amount of memory.
ComputeCommandQueue..ctor() misintereprets the flags argument.

Internals:
Existing ComputeKernel.Set*Arguments() will automatically track the arguments since this is the safe option. In order to block this behaviour you can use the overloads with a bool parameter.

Documentation:
None.


[0.6.1] -----------------------------------------------------------------------
Breaking changes:
Renamed ComputeDeviceMemoryCacheType to ComputeDeviceGlobalMemoryCacheType.
Changed signature of ComputeCommandQueue.Read( ComputeImage ).
Changed return type of ComputeCommandQueue.Read( ComputeImage... ) from IntPtr to byte[].

New functionality:
ComputeImage.ToString().
ComputeProgram..ctor() that takes a single string as an argument.

Bugfixes:
ComputeCommandQueue methods causing memory leaks by creating (and not releasing) unnecessary event objects.
ComputeCommandQueue.Read() ignores "count" parameter.
CommandQueue.Flush() calls CL10.Finish().
Clootils not working with ATI Stream on Windows.

Internals:
Added workaround to prevent a program being built multiple times. Fixes memory leak in the drivers.

Documentation:
Added or modified: ComputeBuffer.CreateFromGLBuffer(), ComputeCommandQueue.AcquireGLObjects(), ComputeCommandQueue.Execute(),
ComputeCommandQueue.ReleaseGLObjects(), ComputeCommandQueue.Read(), ComputeCommandQueue.Unmap(), ComputeCommandQueue.Wait(),
ComputeContext..ctor(), ComputeContextNotifier().

	
[0.6.0] -----------------------------------------------------------------------
Breaking changes:
Replaced all OpenTK enums with new ones.
Restructured ComputeMemory and its dependents' architecture.
Modified ComputeContext constructors. Added ComputeContextProperty and ComputeContextPropertyList for this purpose.
Project Clootils replaced ClooInfo and ClooTester.

New functionality:
Image support.
Added ComputeCommandQueueFlags.None.
Added delegates for callback functions.
OpenCL/OpenGL sharing API.
Extension loading mechanism.
Config file for out-of-the-box Linux and MacOS support.

Bugfixes:
ComputeImage2D.GetSupportedFormats() returns a list of 3D image formats.

Internals:
Replaced OpenTK DllImports and enums with a new layer of bindings. Removes dependency on OpenTK.

Documentation:
Added comments for some of the new public bits.
Added/modified missing comments around existing bits.


[0.5.1] -----------------------------------------------------------------------
Breaking changes:
ComputeJobQueue renamed to ComputeCommandQueue. Avoids confusion for new users.
All ComputeEvent properties that included "Job" in their names are renamed as well.
AddBarrier(), AddMarker() and WaitFor() of ComputeCommandQueue renamed to Barrier(), Marker() and Wait() respectively.

New functionality:
None.

New overloads/helpers:
GetByName() and GetByVendor() methods in ComputePlatform.

Inner changes:
Extension queries modified in order to give an empty list of tokens instead of a list containing one empty token in case no extensions are supported.

Bugfixes:
Enumeration of devices of an OpenCL platform.
Fixed bug that prevented creation of ComputeContext on ATI Stream 1.0 final in 64bit OS's.
ComputeCommandQueue.Read( ComputeBuffer... ) now reads the specified count of items and not the whole buffer.
Crash on ComputeCommandQueue.Wait(). 

Documentation:
A lot of small tweaks, fixes and new lines.


[0.4.1] -----------------------------------------------------------------------
~ changed: Public IntPtrs replaced by longs
~ changed: Fixed CLS-Compliancy related warnings
~ changed: ComputeObject.GetInfo methods no longer provide conversion between native type and queried type
~ changed: Most fields converted to readonly
+ added: Missing comments on public methods and properties
+ added: ComputeKernel.SetSamplerArg for setting sampler_t kernel arguments

[0.3.1] -----------------------------------------------------------------------
~ changed: GetInfo string queries are now parsed with regexes
* fixed: kernel signature for the ray-triangle intersection
+ added: a general ComputeKernel.SetArg method that closely follows clSetKernelArg.
+ added: an internal test for kernel args passing
+ added: ClooInfo, a winforms based app for printing CL related info

[0.2.1] -----------------------------------------------------------------------
~ changed: ComputeDevice now exposes properties instead of fields
~ changed: ComputeDevice fields refactoring
~ changed: error checking method moved to ComputeException
* fixed: ComputeProgram.Build(...) reading binary after unsuccessful build
+ added: Ray-Triangle intersection test
+ added: compute exception classes for all the error codes

[0.1.1.100] -------------------------------------------------------------------
- removed: unmanaged allocs and unnecessary transfers between managed <-> unmanaged memory areas
~ changed: ComputeQueue to ComputeCommandQueue
~ changed: ComputeProgram binaries and all related logic now represented by byte[] instead of string
* fixed: garbage in ComputeProgram binary readback
+ added: mapping ComputeBuffer's content into host memory
+ added: setting ComputeKernel's value type arguments
+ added: execution of a single kernel through clEnqueueTask

[0.1-alpha-1] -----------------------------------------------------------------
The first experimental release of Cloo. This is an alpha release, so expect bugs and missing features.
Only for testing purposes!